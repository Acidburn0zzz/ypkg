.\" generated with Ronn/v0.7.3
.\" http://github.com/rtomayko/ronn/tree/0.7.3
.
.TH "PACKAGE\.YML" "5" "December 2016" "" ""
.
.SH "NAME"
\fBpackage\.yml\fR \- Solus package build format
.
.SH "SYNOPSIS"
.
.nf

The Solus package build format, with YAML syntax\.
.
.fi
.
.SH "DESCRIPTION"
The primary format of package builds in Solus, \fBpackage\.yml(5)\fR provides a modern, declarative, and structured format in which to define metadata and steps, to convert a build operation into a package\.
.
.P
\fBypkg\-build(1)\fR will use the advanced patterns system and some very specific internal rules to automatically split the package into multiple packages, refered to here as "subpackages"\.
.
.SH "CONFIGURATION FORMAT"
\fBypkg\-build(1)\fR uses the YAML file format\. However, this is a very specialised flavour of YAML with very specific extensions and types\.
.
.P
\fBTypes\fR
.
.P
Some of the specialised types expected by \fBpackage\.yml(5)\fR are explained below\.
.
.IP "\(bu" 4
\fBdict(s)\fR
.
.IP
This is a set of one or more \fBkey\fR:\fBvalue\fR mappings\. These are always in a list format\.
.
.IP "\(bu" 4
\fBmultimap\fR
.
.IP
This is a \fBkey\fR:\fBvalue\fR mapping where the \fBkey\fR is IMPLICIT\. That is to say, it is acceptable to omit the key\. A single value passed as the \fBvalue\fR will set the implicit key\'s component\.
.
.IP
In all instances the implicit key is the \fBmain package\fR\. The \fBmultimap\fR format can accept a list instead of a string as a value, and each item in that list also follows the implicit key policy\.
.
.IP
For each item in the list, if the \fBkey\fR is EXPLICIT, by using \fBdict\fR style \fBkey\fR:\fBvalue\fR mapping, then the key specified will be used\.
.
.IP
Within \fBypkg(1)\fR, that key is always a package name\. This name should be the shortform name, not the fully qualified name, i\.e the subpackage name without the \fBname\fR prefix\.
.
.IP
This allows a general key to accept sane defaults, but also allows the key to be extended to override attributes of a subpackage\.
.
.IP "" 0
.
.P
\fBMandatory Keys\fR
.
.IP "\(bu" 4
\fBname\fR [string]
.
.IP
Set the name of the package\. In general this should try to match the upstream source name wherever possible\. All subpackages generated by \fBypkg\-build(1)\fR will have this \fBname\fR as a prefix\.
.
.IP "\(bu" 4
\fBversion\fR [string]
.
.IP
The version of the software being packaged\. This should match the upstream version, i\.e\. that of the tarball or git tag\.
.
.IP "\(bu" 4
\fBrelease\fR [integer]
.
.IP
Packages within Solus are updated by their \fBrelease number\fR\. This number must start at 1 in new packages, and be incremented for every new update or change to the package that is published\.
.
.IP
It is perfectly acceptable to push an update with a \fBlower version\fR by bumping the release number\.
.
.IP "\(bu" 4
\fBlicense\fR [string(s)]
.
.IP
One or more strings that identify the software license of this package\. This should in most cases be a recognised \fBSPDX\fR license name\.
.
.IP "" 4
.
.nf

  * https://spdx\.org/licenses/
.
.fi
.
.IP "" 0

.
.IP "\(bu" 4
\fBsource\fR [dict(s)]
.
.IP
This key expects a list of \fBkey\fR:\fBvalue\fR mappings, to declare the sources that this package will use\. A "simple source" could be a tarball, where the key is the upstream URL, and the value must be a valid \fBsha256sum(1)\fR for that tarball\.
.
.IP
You can list multiple sources and they will all be fetched for the build process, but only the first will be extracted\. You can locate these other sources during your build with the \fB$sources\fR variable\.
.
.IP
\fBgit(1)\fR sources are also supported, and can be identified by prefixing the URI with \fBgit|\fR\. The expected value should be a commit, sha reference, or a tag\.
.
.IP "\(bu" 4
\fBcomponent\fR [multimap]
.
.IP
This key sets the package component, that is to say, the logical unit of organisation that it belongs to\. Check \fBeopkg lc\fR for existing component names\.
.
.IP
\fBcomponent\fR is a multimap key, therefore if passed a single string value it will set the component for the main package\. However, you may instead pass a list of the subpackage names, and set their component individually using the map \fBvalue\fR\.
.
.IP "\(bu" 4
\fBsummary\fR [multimap]
.
.IP
Set the "short" description of a package, i\.e\. a one line explanation of what an item is\. Use the subpackage names in the explicit key for this multimap to override subpackage summaries\.
.
.IP "\(bu" 4
\fBdescription\fR [multimap]
.
.IP
Set the full description of a package, i\.e\. a more in depth explanation of the software/package\'s functionality\. This is the large description that will be displayed in \fBeopkg\fR and the \fBsolus\-sc\fR\. Use the subpackage names in the explicit key for this multimap to override subpackage descriptions\.
.
.IP "" 0
.
.P
\fBOptional Keys\fR
.
.P
These keys are not mandatory to a \fBpackage\.yml\fR file, but may be used to configure additional functionality\.
.
.IP "\(bu" 4
\fBbuilddeps\fR [list]
.
.IP
Specifies the build dependencies required to actually make this package build in an isolated environment (\fBsolbuild(1)\fR)\.
.
.IP
You may use full package names here, though it is preferable to use the \fBpkg\-config(1)\fR names\.
.
.IP
\fBypkg\-build(1)\fR understands pkgconfig dependencies denoted inside either the \fBpkgconfig($name)\fR identifier, or \fBpkgconfig32($name)\fR for emul32 build dependencies\.
.
.IP
It is not required to list any package here that exists in the \fBsystem\.base\fR or \fBsystem\.devel\fR component\.
.
.IP "\(bu" 4
\fBclang\fR [boolean]
.
.IP
Set this key to \fByes\fR to force building this package with the \fBclang\fR compiler\. The build environment will be configured to use \fBclang\fR as the \fB$CC\fR and \fBclang++\fR as the \fB$CXX\fR variables\.
.
.IP
By default this key is set to \fBno\fR\.
.
.IP "\(bu" 4
\fBextract\fR [boolean]
.
.IP
By default, \fBypkg\-build(1)\fR will extract all sources listed in the file\. If this is undesirable, set this key to \fBno\fR to disable this automatic extraction\.
.
.IP "\(bu" 4
\fBautodep\fR [boolean]
.
.IP
After a build has finished, \fBypkg\-build(1)\fR will automatically scan the package files to determine dependencies between the package and any of it\'s subpackages, and to external packages in the build environment\.
.
.IP
This is essential in most cases, as it allows packages to benefit from automatic dependencies and ensures the user always gets all of the packages needed to run this software when installing it\.
.
.IP
If for any reason you need to disable this functionality, i\.e\. for bootstrapping or sideloading, set this key to \fBno\fR\.
.
.IP "\(bu" 4
\fBemul32\fR [boolean]
.
.IP
\fBypkg\-build(1)\fR can optionally build your package in a multilib configuration\. If this key is set to \fByes\fR, the buildset will double, and the first build configuration will be set up for a \fB32\-bit\fR ("emul32") build\. ypkg will automatically split off \fB\-32bit\fR and \fB\-32bit\-devel\fR subpackages in this instance, using the \fB/usr/lib32\fR library directory\. It will also add additional build dependencies automatically for 32\-bit builds\.
.
.IP
By default, this key is set to \fBno\fR\.
.
.IP "\(bu" 4
\fBlibsplit\fR [boolean]
.
.IP
The default patterns include logic to split subpackages according to the library files in library directory\. It is standard practice for ypkg to split \fB*\.so\fR symlinks into the automatic \fBdevel\fR subpackage, along with other development assets such as \fBpkgconfig\fR and \fB*\.h\fR files\.
.
.IP
Some software packages provide \fB*\.so\fR files in the libdir that are not symlinks, or are required for "main" operation\. In this instance you can set this key to \fBno\fR to disable this pattern\.
.
.IP
By default, this key is set to \fByes\fR, and should only be disabled if truly required\.
.
.IP "\(bu" 4
\fBrundeps\fR [multimap]
.
.IP
Provide a list of additional runtime dependencies for the main package\. These names should be fully qualified package names in the list, even for subpackages\.
.
.IP
If the EXPLICIT multimap key is set, then the runtime dependencies will be added to the subpackage instead\. Note that you can pass a list or a single string value to the EXPLICIT rundep\.
.
.IP "\(bu" 4
\fBreplaces\fR [multimap]
.
.IP
When exported in the package index, this will indicate to the package manager that THIS package now replaces the name in the value\.
.
.IP
You may also set \fBreplaces\fR on subpackages using the multimap notation\. Only one value per subpackage is allowed\.
.
.IP "\(bu" 4
\fBpatterns\fR [multimap]
.
.IP
Control package splitting and dynamically generate subpackages\. The EXPLICIT key is used to specify the new (or existing!) subpackage name\. The "pattern" is a shell compatible \fBglob(3)\fR expression\.
.
.IP
All files captured by this expression will then end up in that subpackage\. Each successive pattern takes priority over the one listed before it, so if your first pattern unavoidably captures files you need in ANOTHER subpackage, simply list that pattern later\.
.
.IP
\fBypkg\-build(1)\fR ensures that a file cannot belong to multiple packages, and that the last specified pattern, if matching, ALWAYS wins\. It is even possible to supress generation of the main package, by pattern globbing \fB/*\fR to a subpackage\. This will not cause any breakage\.
.
.IP "\(bu" 4
\fBavx2\fR [boolean]
.
.IP
If set, the package will be rebuilt again specifically to enable libraries to be optimised to use \fBAdvanced Vector Extensions\fR\.
.
.IP
The build will be configured with a library directory suffix of \fBavx2\fR, i\.e\. \fB/usr/lib64/avx2\fR or \fB/usr/lib32/avx2\fR\. These libraries will be automatically loaded on the Solus installation if the hardware support is present\.
.
.IP "\(bu" 4
\fBoptimize\fR [string]
.
.IP
Valid keys are restricted to:
.
.IP "\(bu" 4
\fBspeed\fR: Optimise this package for speed performance
.
.IP "\(bu" 4
\fBsize\fR: Optimize the package build solely for size\.
.
.IP "\(bu" 4
\fBno\-relro\fR: Configure the package to disable certain flags, where RELRO is unsupported\.
.
.IP "" 0

.
.IP "" 0
.
.SH "EXAMPLES"
\fBA Complete package\fR
.
.IP "" 4
.
.nf

name       : nano
version    : 2\.7\.1
release    : 63
source     :
    \- https://www\.nano\-editor\.org/dist/v2\.7/nano\-2\.7\.1\.tar\.xz : df5cbe69831d7394c0a32fb27373ab313335ea4dc586d6f4be4081eb1de857cd
license    :
    \- GPL\-3\.0
summary    : Small, friendly text editor inspired by Pico
component  : editor
description: |
    GNU nano is an easy\-to\-use text editor originally designed as a
    replacement for Pico, the ncurses\-based editor from the non\-free
    mailer package Pine (itself now available under the Apache License
    as Alpine)\.
setup      : |
    %configure \-\-enable\-utf8 \-\-docdir=/usr/share/doc/nano
build      : |
    %make
install    : |
    %make_install
.
.fi
.
.IP "" 0
.
.P
\fBGit sources\fR
.
.IP "" 4
.
.nf

source     :
    \- git|https://github\.com/solus\-project/ypkg\.git : v17\.0
.
.fi
.
.IP "" 0
.
.P
\fBMultimap examples\fR
.
.IP "" 4
.
.nf

# Set the component for the main package to `system\.base`
component: system\.base

# Also setting the main component to `system\.base`
component:
    \- system\.base

# Set the component of the main package to system\.base, but set the
# component for subpackage `devel` to `programming\.devel`
component:
    \- system\.base
    \- devel: programming\.devel

# Rundeps multimap
rundeps:
    \- somepkg
    \- devel: somepkg2

# Rundeps, list as explicit key\'s value
rundeps:
    \- somepkg
    \- devel:
        \- somepkg
        \- somepkg2
.
.fi
.
.IP "" 0
.
.P
\fBBuild dependencies examples\fR
.
.IP "" 4
.
.nf

# Build dependencies, in various flavours:
builddeps:
    \- glibc\-32bit\-devel
    \- pkgconfig(gtk+\-3\.0)
    \- pkgconfig32(zlib)
.
.fi
.
.IP "" 0
.
.SH "COPYRIGHT"
.
.IP "\(bu" 4
Copyright © 2016 Ikey Doherty, License: CC\-BY\-SA\-3\.0
.
.IP "" 0
.
.SH "SEE ALSO"
\fBsolbuild(1)\fR, \fBypkg(1)\fR \fBypkg\-build(1)\fR, \fBypkg\-install\-deps(1)\fR
.
.IP "\(bu" 4
https://wiki\.solus\-project\.com/Package\.yml
.
.IP "\(bu" 4
https://github\.com/solus\-project/ypkg
.
.IP "\(bu" 4
https://wiki\.solus\-project\.com/Packaging
.
.IP "\(bu" 4
https://spdx\.org/licenses/
.
.IP "\(bu" 4
https://en\.wikipedia\.org/wiki/Advanced_Vector_Extensions
.
.IP "" 0
.
.SH "NOTES"
Creative Commons Attribution\-ShareAlike 3\.0 Unported
.
.IP "\(bu" 4
http://creativecommons\.org/licenses/by\-sa/3\.0/
.
.IP "" 0

